#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")"
mkdir -p logs

MODEL="gpt-4.1"
PARAMS="params.json"

# Разбор аргументов: "./signal full" или "./signal LINK"
args=()
if [[ $# -gt 0 ]]; then
  if [[ "$1" == "full" ]]; then
    args+=(--multi)
    shift
  elif [[ "$1" != -* && $# -eq 1 ]]; then
    args+=(--symbol "$1")
    shift
  fi
fi
args+=("$@")

ts=$(date -u +%Y%m%d_%H%M%S)
run_log="logs/signal_${ts}.log"

# 1) Печать на экран + логирование + вырезание ЧИСТОГО JSON в logs/last.json
python3 get_signal_json.py --model "$MODEL" --params "$PARAMS" "${args[@]}" \
| tee "$run_log" \
| tee -a logs/last_signal.log \
| sed '/^```json$/d;/^```$/d' \
| tee >(awk 'BEGIN{f=0} /^[[:space:]]*\{/{f=1} f{print} /^[[:space:]]*\}/{if(f){f=0; print ""}}' > logs/last.json) \
> /dev/tty

# 2) Рендерим текстовый блок сетапа из JSON и тоже печатаем/логируем
echo "===== СЕТАП (текст) =====" | tee -a "$run_log" | tee -a logs/last_signal.log > /dev/tty
python3 render_strict.py logs/last.json \
| tee -a "$run_log" \
| tee -a logs/last_signal.log \
> /dev/tty || echo "[WARN] render_strict.py failed" | tee -a "$run_log" | tee -a logs/last_signal.log

echo "----------------------------------------"
echo "✅ Saved logs: $run_log"
echo "✅ Last JSON:  logs/last.json"
