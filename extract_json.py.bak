#!/usr/bin/env python3
import sys, json, re
from datetime import datetime
from zoneinfo import ZoneInfo
import ccxt

def current_msk() -> str:
    return datetime.now(ZoneInfo("Europe/Moscow")).strftime("%d.%m.%Y, %H:%M")

def _fetch_ticker(ex, sym):
    t = ex.fetch_ticker(sym)
    last = t.get("last")
    if last is None:
        bid, ask = t.get("bid"), t.get("ask")
        if bid and ask:
            last = (bid + ask) / 2
    return float(last) if last is not None else None

def get_pair_price(symbol: str):
    for ex in (ccxt.bybit(), ccxt.binance()):
        try:
            p = _fetch_ticker(ex, symbol)
            if p is not None:
                return p
        except Exception:
            pass
    return None

data = sys.stdin.read()
if not data.strip():
    print("ERR: empty stdin", file=sys.stderr)
    sys.exit(1)

# берём последний фрагмент JSON между первой и последней скобкой
start = data.rfind("{")
end = data.rfind("}")
if start == -1 or end == -1 or end <= start:
    print("ERROR: JSON block not found", file=sys.stderr)
    sys.exit(1)

raw_json = data[start:end+1]
try:
    obj = json.loads(raw_json)
except Exception as e:
    print(f"ERROR: cannot parse JSON: {e}", file=sys.stderr)
    sys.exit(1)

# нормализуем время и цену
obj["time_msk"] = current_msk()
symbol = obj.get("symbol")
if symbol:
    px = get_pair_price(symbol)
    if px is not None:
        obj["price"] = float(f"{px:.6f}") if px < 1 else float(f"{px:.2f}")

print(json.dumps(obj, ensure_ascii=False))
